/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.myapp;

import com.sun.pdfview.PDFFile;
import com.sun.pdfview.PDFPage;
import java.awt.BorderLayout;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import org.apache.commons.io.FileUtils;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import org.apache.commons.io.FilenameUtils;
import javax.imageio.ImageIO;


import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author ball_
 */
public class MyFormApp extends javax.swing.JFrame {

    /**
     * Creates new form MyFormApp
     */
    String folderPath = null;
    String PATH = "C:\\Users\\ball_\\Downloads\\Documents\\new folder\\";
    //String PATH = null;
    String pathgetpage = null;
    String[] datadata = null;
    public MyFormApp(String pathFolder) {
        initComponents();
        folderPath = pathFolder;
        PATH = pathFolder+"\\";
        pathgetpage = pathFolder+"\\write.txt";
    }
     public static File[] getFileList(String dirPath) { // ฟังก์ชั่นสำหรับค้นหาไฟล์ pdf ที่อยู่ในโฟล์เดอร์
        File dir = new File(dirPath);   
        File[] fileList = dir.listFiles(new FilenameFilter() {
            public boolean accept(File dir, String name) { //ค้นหารายชื่อไฟล์ทั้งหมดในโฟล์เดอร์
                if(name.endsWith(".PDF")){
                    return name.endsWith(".PDF");
                }
                if(name.endsWith(".pdf")){
                    return name.endsWith(".pdf");
                }
                return false;
                }
            });
            return fileList;
        }  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */ 
     private static void copyFileUsingApacheCommonsIO(File source, File dest) throws IOException { //ฟังก์ชั่น ก๊อปปี้ไฟล์pdf เมื่อทำการเพิ่มหนังสือ ไปเก็บยังโฟล์เดอร์เฉพาะ
                                                    FileUtils.copyFile(source, dest); 
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jFrame4 = new javax.swing.JFrame();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jColorChooser1 = new javax.swing.JColorChooser();
        jFrame5 = new javax.swing.JFrame();
        jFrame6 = new javax.swing.JFrame();
        jFrame7 = new javax.swing.JFrame();
        jFrame8 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        search = new javax.swing.JTextField();
        BackToMain = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        AddFile = new javax.swing.JMenuItem();
        RemoveFile = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame5Layout = new javax.swing.GroupLayout(jFrame5.getContentPane());
        jFrame5.getContentPane().setLayout(jFrame5Layout);
        jFrame5Layout.setHorizontalGroup(
            jFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame5Layout.setVerticalGroup(
            jFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame6Layout = new javax.swing.GroupLayout(jFrame6.getContentPane());
        jFrame6.getContentPane().setLayout(jFrame6Layout);
        jFrame6Layout.setHorizontalGroup(
            jFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame6Layout.setVerticalGroup(
            jFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame7Layout = new javax.swing.GroupLayout(jFrame7.getContentPane());
        jFrame7.getContentPane().setLayout(jFrame7Layout);
        jFrame7Layout.setHorizontalGroup(
            jFrame7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame7Layout.setVerticalGroup(
            jFrame7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame8Layout = new javax.swing.GroupLayout(jFrame8.getContentPane());
        jFrame8.getContentPane().setLayout(jFrame8Layout);
        jFrame8Layout.setHorizontalGroup(
            jFrame8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame8Layout.setVerticalGroup(
            jFrame8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 764, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
        );

        jPanel5.setLayout(new javax.swing.OverlayLayout(jPanel5));

        jList2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jList2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jPanel5.add(jScrollPane2);

        search.setText("search ");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        BackToMain.setText("Main");
        BackToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(BackToMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BackToMain)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        jMenu1.setText("File");

        AddFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        AddFile.setText("Add File");
        AddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFileActionPerformed(evt);
            }
        });
        jMenu1.add(AddFile);

        RemoveFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        RemoveFile.setText("Remove File");
        RemoveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveFileActionPerformed(evt);
            }
        });
        jMenu1.add(RemoveFile);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 1126, 830);
    }// </editor-fold>//GEN-END:initComponents
    
    String oldname=null;
    int oldpage ;
    // build a component controller
    SwingController controller = new SwingController();
    SwingViewBuilder factory = new SwingViewBuilder(controller);
    JPanel viewerComponentPanel = factory.buildViewerPanel();
    
    void openMenuItemActionPerformed() throws FileNotFoundException { //ฟังก์ชั่นเปิด หนังสือ
        int index = jList2.getSelectedIndex(); //ตำแหน่งที่เลือก
        int currentPageNumber = controller.getCurrentPageNumber();  
        
        if(oldname!=null){                   
            System.out.print(listNamePage.size());
            UpdateToFile(listNamePage,oldname+"["+oldpage+"]",oldname+"["+currentPageNumber+"]");          
        }
        
	jPanel5.removeAll();//ลบข้อมูลเก่าที่แสดงก่อนหน้า
        int page = Integer.parseInt(findPage("C:\\Users\\ball_\\Desktop",""+model.getElementAt(index)));
        jPanel5.setLayout(new BorderLayout());		
        String filePath = PATH+model.getElementAt(index);   
        oldname = ""+model.getElementAt(index);
        jPanel5.add(viewerComponentPanel);
        controller.openDocument(filePath);
        controller.showPage(page);
        oldpage = page;  
	jPanel5.setSize(800, 600);
	//jPanel5.pack();
        jPanel5.setVisible(true);
        //jPanel5.validate();             
    }  
    
    public static String findPage(String PATH,String Name) throws FileNotFoundException {
        //สร้างไฟล์ ที่จะอ่าน
        File text = new File(PATH+"\\write.txt");
        //สร้าง scanner เพื่ออ่านไล์
        Scanner s1 = new Scanner(text);    
        String s = new String();
        while (s1.hasNext()){ //ไล่หาคำที่ต้องการ
            String a = s1.nextLine();                    
            Pattern pattern = Pattern.compile("("+Name+"\\[)(.*?)(\\])");
            Matcher matcher = pattern.matcher(a);                    
            
            if (matcher.find()) {
                // System.out.println(matcher.group(2));
                s = matcher.group(2);
            }

        }
        return s;
    }
    
    public void WriteToFile(ArrayList<String> list) {
	try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\ball_\\Desktop\\write.txt"));
            
            for (String x : list) {
		writer.write(x);
		writer.newLine();
            }
            writer.close();
        } catch (IOException e) {
		e.getStackTrace();
        }
    }
    public void deleteFromFile(ArrayList<String> list, String search){
	for(int i=0;i<list.size();i++){
            
            if(list.get(i).equals(search)){
		list.remove(i);
		WriteToFile(list);
            }
	}
    }
    public void UpdateToFile(ArrayList<String> list,String search, String Update){
	for(int i=0;i<list.size();i++){
            
            if(list.get(i).equals(search)){
		list.set(i, Update);
		WriteToFile(list);
            }
	}
    }
    ArrayList<String> listNamePage = new ArrayList<String>();
    int i =0;      
    DefaultListModel<Book> model = new DefaultListModel();  //ตั้งตัวแปรทำ icon สำหรับ LIST
    
    public  void keeplist() throws FileNotFoundException{
        if(listNamePage.isEmpty()== false){
            listNamePage.clear();
            i=0;
            model.clear();
        }
        
        File text = new File("C:\\Users\\ball_\\Desktop"+"\\write.txt");
        //สร้าง scanner เพื่ออ่านไล์
        Scanner s1 = new Scanner(text);    
        
        while (s1.hasNext()) //ไล่หาคำที่ต้องการ
            {
              String a = s1.nextLine(); 
              listNamePage.add(a);
            }
        
    }
    private void RemoveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveFileActionPerformed
        
        //ฟังก์ชั่นจะทำการลบ รายชื่อไฟล์ที่ต้องการ ลบ เมื่อกดปุ่มลบ
        int index = jList2.getSelectedIndex(); //ตำแหน่งรายชื่อที่เลือก
        int response = JOptionPane.showConfirmDialog(null, "Do you want to delete "+model.getElementAt(index)+" ?", "Confirm", //หน้าต่างแจ้งเตือนคอนเฟิร์มเพื่อลบ
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        try {
            String a = findPage("C:\\Users\\ball_\\Desktop",""+model.getElementAt(index));
             System.out.println(model.getElementAt(index));
        if (response == JOptionPane.YES_OPTION) {//กดตกลงจะทำตามเงื่อนไข

            if (model.getSize() > 0)
            System.out.println( PATH+model.getElementAt(index));//แสดงรายชื่อที่ลบ
            deleteFromFile(listNamePage,model.getElementAt(index)+"["+a+"]");
            deleteDir(new File(PATH+model.getElementAt(index)));//ลบไฟล์ pdf ในโฟล์เดอร์
            deleteDir(new File(PATH+model.getElementAt(index).getIconName()+".png"));//ลบไฟล์รูปในโฟล์เดอร์
            model.removeElementAt(index);//ลบรายชื่อ ในหนน้าต่างLIST
                
        }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MyFormApp.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_RemoveFileActionPerformed

    private void AddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFileActionPerformed
        
        //ฟังก์ชั่น เพิ่มหนังสือเมื่อกดปุ่มเพิ่ม
        JFileChooser fileChooser = new JFileChooser(); //เปิดหน้าต่างเลือกไฟล์
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("PDF Documents", "pdf"));//แสดงเฉพาะpdf
        fileChooser.setAcceptAllFileFilterUsed(false);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {//เมื่อเลือกไฟล์แล้วตกตกลง
            File selectedFile = fileChooser.getSelectedFile(); 
            try {
                pdfToimage(selectedFile); //ทำการเซฟรูปหน้าปกของไฟล์ที่เลือก
                listNamePage.add(selectedFile.getName()+"[0]");
                WriteToFile(listNamePage);
           

            System.out.println(selectedFile.getName()); //แสดงรายชื่อที่หนังสือที่เลือกเพิ่ม
            File source = new File(""+selectedFile);
            File dest = new File(PATH+ selectedFile.getName());
            //copy file conventional way using Stream
            long start = System.nanoTime();
            //copy files using apache commons io
            start = System.nanoTime();
            
            String a = findPage("C:\\Users\\ball_\\Desktop",""+selectedFile.getName());   
            String imagename = FilenameUtils.removeExtension(selectedFile.getName());
           
            model.addElement(new Book(selectedFile.getName(), a , imagename,PATH)); //ใส่รายชื่อในlist
   
            jList2.setModel(model);
            jList2.setCellRenderer(new BookRenderer());
           
            copyFileUsingApacheCommonsIO(source, dest); //ก็อปปี้ไฟล์ไปใส่ในโฟล์เดอร์เฉพาะ
       
            System.out.println("Time taken by Apache Commons IO Copy = "+(System.nanoTime()-start));
             } catch (IOException ex) {
                Logger.getLogger(MyFormApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_AddFileActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        
        int response = JOptionPane.showConfirmDialog(null, "Do you want to close window", "Confirm", //หน้าต่างแจ้งเตือนคอนเฟิร์มเพื่อลบ
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
     
        if (response == JOptionPane.YES_OPTION) {//กดตกลงจะทำตามเงื่อนไข
             System.exit(0);          
        }
    }//GEN-LAST:event_ExitActionPerformed

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            
            int index = jList2.getSelectedIndex();
            System.out.println( model.getElementAt(index)); //แสดงรายชื่อไฟล์ที่เปิด
            try {
                openMenuItemActionPerformed(); //เรียกใช้ฟังก์ชั่นเพื่อเปิด หนังสือ ในแทปที่ 2
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MyFormApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jList2MouseClicked
    
    private void jList2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jList2AncestorAdded
        try {
            File[] fileList = getFileList("C:\\Users\\ball_\\Downloads\\Documents\\new folder"); //เรียกใช้ฟังก์ชั่นหารายชื่อไฟล์ แล้วเก็บรายชื่อไฟล์
            String[] data = new String[fileList.length];
            datadata = data;
            keeplist();
            for(File file : fileList) {  //ไล่รายชื่อ

                data[i] = (file.getName());
                System.out.println(data[i]);
                String imagename = FilenameUtils.removeExtension(data[i]);
                System.out.println(imagename);
                int a= Integer.parseInt(findPage("C:\\Users\\ball_\\Desktop",file.getName()))+1;
                model.addElement(new Book(data[i], ""+a, imagename,PATH) ); //ใส่ข้อมูล ลำดับหนังสือ ชื่อรูปภาพ ที่อยู่ของภาพ สำหรับทำไอคอน
                i=i+1;
            }

            jList2.setModel(model);
            jList2.setCellRenderer(new BookRenderer());
            jList2.setVisible(true);
            // ฟังก์ชั่น LIST หนังสือ
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MyFormApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList2AncestorAdded

    private void BackToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMainActionPerformed
        // TODO add your handling code here:
                search.setText("search");
        	jPanel5.removeAll();//ลบข้อมูลเก่าที่แสดงก่อนหน้า
		jPanel5.setLayout(new BorderLayout());		
		jPanel5.add(jList2);
                jPanel5.setSize(800, 600);
                jPanel5.setVisible(true);
    }//GEN-LAST:event_BackToMainActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
       


           // filterModel((DefaultListModel<Book>)jList2.getModel(), filter);
        
          
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        
        String filter = search.getText();
        System.out.print((DefaultListModel<Book>)jList2.getModel());
        try {
            filterModel((DefaultListModel<Book>)jList2.getModel(), filter);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MyFormApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchKeyReleased

    public void filterModel(DefaultListModel<Book> model, String filter) throws FileNotFoundException {
        model.removeAllElements();
        for (String s : datadata) {
            if (!s.startsWith(filter)) {
                if (model.contains(s)) {
                    model.removeElement(s);
                }
            } else {
                if (!model.contains(s)) {
                    String imagename = FilenameUtils.removeExtension(s);
                    System.out.println(imagename);
                    int a= Integer.parseInt(findPage("C:\\Users\\ball_\\Desktop",s))+1;
                    model.addElement(new Book(s, ""+a, imagename,PATH) ); //ใส่ข้อมูล ลำดับหนังสือ ชื่อรูปภาพ ที่อยู่ของภาพ สำหรับทำไอคอน
                }
            }
        }
    }
    public static boolean deleteDir(File dir) { //ฟังก์ชั่นลบไฟล์
      if (dir.isDirectory()) {
         String[] children = dir.list();
         for (int i = 0; i < children.length; i++) {
            boolean success = deleteDir
            (new File(dir, children[i]));
            if (!success) {
               return false;
            }
         }
      }
      return dir.delete();
      
  }
     void pdfToimage(File filename) throws FileNotFoundException, IOException { //แปลงpdfเป็นรูปภาพ เฉพาะหน้าปก
        
        
        File pdfFile = new File(filename.toString()); //เปิดไฟล์ pdf
        RandomAccessFile raf = new RandomAccessFile(pdfFile, "r");
        FileChannel channel = raf.getChannel();
        ByteBuffer buf = channel.map(FileChannel.MapMode.READ_ONLY, 0, channel.size());
        PDFFile pdf = new PDFFile(buf);

        int i=0;
        String fileNameWithOutExt = FilenameUtils.removeExtension(filename.getName());  
  
        Rectangle rect = new Rectangle(0, 0, (int) pdf.getPage(i).getBBox().getWidth(), //ตั้งค่ารูป
                (int) pdf.getPage(i).getBBox().getHeight());
        BufferedImage bufferedImage = new BufferedImage(100, 100,
                         BufferedImage.TYPE_INT_RGB);

        Image image = pdf.getPage(i).getImage(rect.width, rect.height,    // width & height
                   rect,                       // clip rect
                   null,                       // null for the ImageObserver
                   true,                       // fill background with white
                   true                        // block until drawing is done
        );
        Graphics2D bufImageGraphics = bufferedImage.createGraphics();
        bufImageGraphics.drawImage(image.getScaledInstance(100, 100, Image.SCALE_AREA_AVERAGING),0,0,null);
     
        ImageIO.write(bufferedImage, "PNG", new File( "C:\\Users\\ball_\\Downloads\\Documents\\new folder\\"+fileNameWithOutExt+".png" )); //บันทึกภาพ 
    }
    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFormApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFormApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFormApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFormApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFormApp(folderPath).setVisible(true);
            }        
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddFile;
    private javax.swing.JButton BackToMain;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem RemoveFile;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JFrame jFrame5;
    private javax.swing.JFrame jFrame6;
    private javax.swing.JFrame jFrame7;
    private javax.swing.JFrame jFrame8;
    private javax.swing.JList<Book> jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables

   
}
    

